"""delete vehicle

Revision ID: 096a0233b700
Revises: fee53fd1195a
Create Date: 2025-02-18 10:33:30.806153

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '096a0233b700'
down_revision: Union[str, None] = 'fee53fd1195a'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint('routes_vehicle_id_fkey', 'routes', type_='foreignkey')
    op.drop_constraint('couriers_vehicle_id_fkey', 'couriers', type_='foreignkey')
    op.drop_column('routes', 'vehicle_id')
    op.drop_column('couriers', 'vehicle_id')
    op.drop_index('ix_vehicles_id', table_name='vehicles')
    op.drop_table('vehicles')
    op.add_column('couriers', sa.Column('vehicle', sa.String(), nullable=True))
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('routes', sa.Column('vehicle_id', sa.INTEGER(), autoincrement=False, nullable=False))
    op.create_foreign_key('routes_vehicle_id_fkey', 'routes', 'vehicles', ['vehicle_id'], ['id'])
    op.add_column('couriers', sa.Column('vehicle_id', sa.INTEGER(), autoincrement=False, nullable=True))
    op.create_foreign_key('couriers_vehicle_id_fkey', 'couriers', 'vehicles', ['vehicle_id'], ['id'])
    op.drop_column('couriers', 'vehicle')
    op.create_table('vehicles',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('license_plate', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('model', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('capacity', sa.NUMERIC(precision=10, scale=2), autoincrement=False, nullable=True),
    sa.Column('status', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='vehicles_pkey'),
    sa.UniqueConstraint('license_plate', name='vehicles_license_plate_key')
    )
    op.create_index('ix_vehicles_id', 'vehicles', ['id'], unique=False)
    # ### end Alembic commands ###
